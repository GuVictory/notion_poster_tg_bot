import { Logger } from '../../utils/logger';
import { BotContext, BotConversation } from '../bot';
import { DoneMenu } from '../menus/doneMenu';
import { NewUserSettingsMenu } from '../menus/newUserSettingsMenu';

export const onboarding = async (conversation: BotConversation, ctx: BotContext) => {
    Logger.i.debug(`Onboarding for with chat id: ${ctx.chat?.id} started`);

    await ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç üñê\n –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Notion!\n\n–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!',
        {
            // eslint-disable-next-line camelcase
            reply_markup: NewUserSettingsMenu.getInstance().getMenu(),
        },
    );

    let channelUrlCollected = false;
    let channelLink: URL | undefined = undefined;

    while (!channelUrlCollected) {
        channelUrlCollected = true;
        channelLink = await conversation.form.url(async () => {
            Logger.i.debug('Not Walid Url');
            await ctx.reply('–ö–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –Ω–µ –≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
            channelUrlCollected = false;
        });

        if (channelLink.hostname !== 't.me') {
            await ctx.reply('–ö–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
            channelUrlCollected = false;
        }
    }

    // channelLink?.href

    if (ctx.chat?.id) {
        await ctx.api.sendMessage(
            ctx.chat?.id,
            '2Ô∏è‚É£ –î–∞–ª—å—à–µ –º–Ω–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª Notion API –∫–ª—é—á üîë \n\n [–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è](https://developers.notion.com/docs/create-a-notion-integration#step-1-create-an-integration)',
            {
                // eslint-disable-next-line camelcase
                parse_mode: 'MarkdownV2',
            },
        );
    }

    const notionApiKey = await conversation.form.text();

    if (ctx.chat?.id) {
        await ctx.api.sendMessage(
            ctx.chat?.id,
            '3Ô∏è‚É£ –¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –Ω–∞–¥–æ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–µ –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–≤–æ–π API –∫–ª—é—á –∫ –Ω–µ–π\\! \n\n [–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è](https://developers.notion.com/docs/create-a-notion-integration#step-1-create-an-integration)',
            {
                // eslint-disable-next-line camelcase
                parse_mode: 'MarkdownV2',
                // eslint-disable-next-line camelcase
                reply_markup: DoneMenu.getInstance().getMenu(),
            },
        );
    }

    await conversation.wait();

    await ctx.reply(
        `–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –¥–æ–±–∞–≤—å –º–µ–Ω—è –≤ –∫–∞—á–µ—Å—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∫–∞–Ω–∞–ª ${channelLink?.href}\n\n–ò –≤—Å–µ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é ü•≥, —Ç–µ–ø–µ—Ä—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ —Ç–≤–æ–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!`,
    );
};
